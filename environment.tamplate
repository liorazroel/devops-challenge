AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy Flask app from Docker Hub to EC2 in a given VPC

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair
    Type: AWS::EC2::KeyPair::KeyName

  DockerImage:
    Description: Docker Hub image (e.g. youruser/flask-app:latest)
    Type: String

  VpcId:
    Description: VPC where the EC2 instance will be deployed
    Type: AWS::EC2::VPC::Id

  SubnetId:
    Description: Subnet in the VPC to launch the EC2 instance
    Type: AWS::EC2::Subnet::Id

  InstanceType:
    Type: String
    Default: t3.micro
    AllowedValues:
      - t2.micro
      - t3.micro
      - t3.small
      - t3.medium
    Description: EC2 instance type

Resources:

  FlaskSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH (22) and Flask (5000)
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          CidrIp: 0.0.0.0/0

  FlaskInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref FlaskSecurityGroup
      ImageId: ami-0c2b8ca1dad447f8a  # Amazon Linux 2 (us-east-1). Update if needed.
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install docker -y
          service docker start
          usermod -aG docker ec2-user
          docker pull ${DockerImage}
          docker run -d -p 5000:5000 ${DockerImage}

Outputs:
  InstancePublicIP:
    Description: Public IP of the EC2 instance
    Value: !GetAtt FlaskInstance.PublicIp

  AppURL:
    Description: Flask App URL
    Value: !Sub "http://${FlaskInstance.PublicIp}:5000"